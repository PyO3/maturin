env:
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

build_and_test: &BUILD_AND_TEST
  # only run tasks on pull request or github merge queue branches
  only_if: $CIRRUS_BRANCH =~ 'gh-readonly-queue/.*' || $CIRRUS_PR != ""
  setup_script:
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
    - rustup target add wasm32-wasi
    - python3 -m pip install --upgrade cffi virtualenv
  build_script:
    - cargo build
  test_script:
    - cargo test

freebsd_task:
  name: Test (x86_64 FreeBSD)
  freebsd_instance:
    image_family: freebsd-13-1
  env:
    PATH: $HOME/.cargo/bin:$PATH
  target_cache:
    folder: target
    fingerprint_script:
      - echo $CIRRUS_OS
      - cat Cargo.lock
  install_script:
    - pkg install -y bash git python
    - python3 -m ensurepip
  <<: *BUILD_AND_TEST

macos_arm64_task:
  name: Test (arm64 macOS)
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-xcode:latest
  env:
    PATH: $HOME/.cargo/bin:/opt/homebrew/opt/python@3.10/bin:$PATH
  target_cache:
    folder: target
    fingerprint_script:
      - echo $CIRRUS_OS
      - cat Cargo.lock
  install_script:
    - brew install python3
    - python3 -m pip install uniffi-bindgen==0.24.1
  <<: *BUILD_AND_TEST

linux_aarch64_task:
  name: Test (arm64 Linux)
  arm_container:
    image: python:3.11
    cpu: 4
    memory: 4G
  env:
    PATH: /root/.cargo/bin:$PATH
  target_cache:
    folder: target
    fingerprint_script:
      - echo $CIRRUS_OS
      - cat Cargo.lock
  install_script:
    - python3 -m pip install uniffi-bindgen==0.24.1
  <<: *BUILD_AND_TEST
