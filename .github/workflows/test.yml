name: Run tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install cffi and virtualenv
        run: pip install cffi virtualenv
      - uses: actions-rs/toolchain@v1
        id: rustup
        with:
          profile: minimal
          toolchain: stable
          override: true
      #- name: Cache cargo registry
      #  uses: actions/cache@v2
      #  with:
      #    path: ~/.cargo/registry
      #    key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-registry-${{ hashFiles('**/Cargo.lock') }}
      #- name: Cache cargo index
      #  uses: actions/cache@v2
      #  with:
      #    path: ~/.cargo/git
      #    key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-index-${{ hashFiles('**/Cargo.lock') }}
      #- name: Cache cargo build
      #  uses: actions/cache@v2
      #  with:
      #    path: target
      #    key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-target-${{ hashFiles('**/Cargo.lock') }}
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
