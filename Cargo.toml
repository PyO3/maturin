[package]
authors = ["konstin <konstin@mailbox.org>", "messense <messense@icloud.com>"]
name = "maturin"
version = "1.9.6"
description = "Build and publish crates with pyo3, cffi and uniffi bindings as well as rust binaries as python packages"
exclude = [
    "test-crates/**/*",
    "sysconfig/*",
    "test-data/*",
    "ci/*",
    "tests/*",
    "guide/*",
    ".github/*",
    ".devcontainer/*",
    "Dockerfile",
    ".dockerignore",
    "deny.toml",
    "noxfile.py",
    "test-dockerfile.sh",
    "Code-of-Conduct.md",
]
homepage = "https://github.com/pyo3/maturin"
readme = "README.md"
repository = "https://github.com/pyo3/maturin"
license = "MIT OR Apache-2.0"
keywords = ["python", "cffi", "packaging", "pypi", "pyo3"]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "command-line-utilities",
]
edition = "2021"
rust-version = "1.74"

[[bin]]
name = "maturin"

[lib]
name = "maturin"

[dependencies]
anyhow = "1.0.100"
base64 = "0.22.0"
glob = "0.3.3"
cargo-config2 = "0.1.39"
cargo_metadata = "0.20.0"
cargo-options = "0.7.6"
cbindgen = { version = "0.29.0", default-features = false }
flate2 = "1.1.4"
goblin = "0.10.2"
platform-info = "2.0.2"
regex = "1.12.2"
rustflags = "0.1.7"
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.145"
sha2 = "0.10.9"
tar = "0.4.44"
tempfile = "3.23.0"
toml = "0.9.8"
toml_edit = "0.22.6"
zip = { version = "3.0.0", default-features = false, features = [
    "bzip2",
    "deflate",
    "time",
    "zstd",
    "lzma",
] }
thiserror = "2.0.17"
fs-err = "3.1.3"
fat-macho = { version = "0.4.8", default-features = false }
once_cell = "1.21.3"
rustc_version = "0.4.0"
semver = "1.0.27"
target-lexicon = "0.13.3"
indexmap = "2.2.3"
pyproject-toml = { version = "0.13.7", features = ["pep639-glob"] }
python-pkginfo = "0.6.5"
textwrap = "0.16.2"
ignore = "0.4.24"
itertools = "0.13.0"
lddtree = "0.3.7"
cc = "1.2.41"
dunce = "1.0.2"
normpath = "1.5.0"
path-slash = "0.2.1"
pep440_rs = { version = "0.7.3", features = ["tracing"] }
pep508_rs = { version = "0.9.2", features = ["tracing"] }
same-file = "1.0.6"
time = "0.3.17"
url = "2.5.7"
unicode-xid = { version = "0.2.4", optional = true }

# cli
clap = { version = "4.0.0", features = [
    "derive",
    "env",
    "wrap_help",
    "unstable-styles",
] }
clap_complete_command = { version = "0.6.1", optional = true }

# cross compile
cargo-zigbuild = { version = "0.20.1", default-features = false, optional = true }
cargo-xwin = { version = "0.20.1", default-features = false, optional = true }

# log
tracing = "0.1.36"
tracing-subscriber = { version = "0.3.20", features = ["env-filter"] }

# project scaffolding, maturin new/init/generate-ci
dialoguer = { version = "0.12.0", default-features = false, optional = true }
console = { version = "0.16.1", optional = true }
minijinja = { version = "2.12.0", optional = true }

# upload
bytesize = { version = "2.1.0", optional = true }
configparser = { version = "3.0.3", optional = true }
dirs = { version = "6.0.0", optional = true }
multipart = { version = "0.18.0", features = [
    "client",
], default-features = false, optional = true }
ureq = { version = "2.9.4", features = [
    "gzip",
    "json",
    "socks-proxy",
], default-features = false, optional = true }
native-tls = { version = "0.2.14", optional = true }
rustls = { version = "0.23", default-features = false, features = [
    "logging",
    "std",
    "tls12",
], optional = true }
rustls-pemfile = { version = "2.2.0", optional = true }
keyring = { version = "2.3.2", default-features = false, features = [
    "linux-no-secret-service",
], optional = true }
wild = { version = "2.1.0", optional = true }

# JSON schema
schemars = { version = "1.0.4", optional = true }
pretty_assertions = { version = "1.3.0", optional = true }

[dev-dependencies]
expect-test = "1.5.1"
fs4 = { version = "0.13.1", features = ["fs-err3"] }
indoc = "2.0.6"
insta = "1.43.2"
pretty_assertions = "1.3.0"
rstest = "0.26.1"
rustversion = "1.0.22"
time = { version = "0.3.34", features = ["macros"] }
trycmd = "0.15.10"
which = "8.0.0"

[features]
default = ["full", "rustls"]

full = ["cli-completion", "cross-compile", "scaffolding", "upload"]

cli-completion = ["dep:clap_complete_command"]

upload = [
    "ureq",
    "multipart",
    "configparser",
    "bytesize",
    "dialoguer/password",
    "wild",
    "dep:dirs",
]

schemars = ["dep:schemars", "dep:pretty_assertions"]

# keyring doesn't support *BSD so it's not enabled in `full` by default
password-storage = ["upload", "keyring"]

rustls = [
    "dep:rustls",
    "ureq?/tls",
    "cargo-xwin?/rustls-tls",
    "dep:rustls-pemfile",
]
native-tls = [
    "dep:native-tls",
    "ureq?/native-tls",
    "cargo-xwin?/native-tls",
    "dep:rustls-pemfile",
]

# cross compile using zig or xwin
cross-compile = ["zig", "xwin"]
zig = ["cargo-zigbuild"]
xwin = ["cargo-xwin"]

# project scaffolding
scaffolding = ["dialoguer", "console", "minijinja", "unicode-xid"]

# Internal feature to speed up the tests significantly
faster-tests = []

# Deprecated features, keep them now for compatibility
human-panic = []
log = []

[profile.profiling]
inherits = "release"
debug = true

# Without this, compressing the .gz archive becomes notably slow for debug builds
[profile.dev.package.miniz_oxide]
opt-level = 3
# Speedup cargo-xwin for debug builds
[profile.dev.package.cab]
opt-level = 3
[profile.dev.package.msi]
opt-level = 3
